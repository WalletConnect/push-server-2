name: Pull Request Metrics

on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review

permissions:
  contents: read
  pull-requests: write

jobs:
  calculate_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          cargo install cargo-bloat
          cargo install cargo-tarpaulin

      - name: Ensure Build
        run: |
          cargo build --release

      - name: Clone Current Branch
        run: |
          git clone --depth=1 --branch ${{ github.head_ref }} https://github.com/${{ github.repository }} /tmp/current_branch
        working-directory: /tmp

      - name: Clone Target Branch
        run: |
          git clone --depth=1 --branch ${{ github.base_ref }} https://github.com/${{ github.repository }} /tmp/target_branch
        working-directory: /tmp

      - name: Build Release Binary - Current Branch
        run: |
          cd /tmp/current_branch
          cargo build --release --all-features
          mv target/release/push-server /tmp/current_binary

      - name: Build Release Binary - Target Branch
        run: |
          cd /tmp/target_branch
          cargo build --release --all-features
          mv target/release/push-server /tmp/target_binary

      - name: Calculate Binary Size Change
        id: size_change
        run: |
          previous_size=$(stat -c %s /tmp/target_binary)
          current_size=$(stat -c %s /tmp/current_binary)
          size_change=$((current_size - previous_size))
          echo "::set-output name=size_change::$size_change"
          echo "::set-output name=previous_size::$previous_size"
          echo "::set-output name=current_size::$current_size"

#      - name: Calculate Test Coverage Change
#        id: coverage_change
#        run: |
#          cd /tmp/target_branch
#          previous_coverage=$(cargo tarpaulin -o Json --all-features --output-dir /tmp/coverage-target --workspace | jq '.report.covered_percent')
#          cd /tmp/current_branch
#          current_coverage=$(cargo tarpaulin -o Json --all-features --output-dir /tmp/coverage-current --workspace | jq '.report.covered_percent')
#          coverage_change=$(echo "scale=2; $current_coverage - $previous_coverage" | bc)
#          echo "::set-output name=coverage_change::$coverage_change"
#          echo "::set-output name=previous_coverage::$previous_coverage"
#          echo "::set-output name=current_coverage::$current_coverage"
      # TODO: note needs to be fixed!
      - name: Calculate Test Coverage Change
        id: coverage_change
        run: |
          echo "::set-output name=coverage_change::0"
          echo "::set-output name=previous_coverage::0"
          echo "::set-output name=current_coverage::0"

      - name: Comment on Pull Request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sizeChange = parseInt('${{ steps.size_change.outputs.size_change }}');
            const previousSize = parseInt('${{ steps.size_change.outputs.previous_size }}');
            const currentSize = parseInt('${{ steps.size_change.outputs.current_size }}');

            const coverageChange = parseFloat('${{ steps.coverage_change.outputs.coverage_change }}').toFixed(2);
            const previousCoverage = parseFloat('${{ steps.coverage_change.outputs.previous_coverage }}');
            const currentCoverage = parseFloat('${{ steps.coverage_change.outputs.current_coverage }}');

            const context = github.context.payload;
            const prNumber = context.pull_request.number;

            const getColor = (value, size) => {
              if (value === 0) return 'black';
              if (size) return value > 0 ? 'red' : 'green';
              return value > 0 ? 'green' : 'red';
            };

            const sizeChangeColor = getColor(sizeChange, true);
            const coverageChangeColor = getColor(coverageChange, false);

            const table = `
              | Metric            | Source Branch | Target Branch | % Change  |
              |-------------------|---------------|---------------|-----------|
              | Binary Size Change| ${currentSize >= 0 ? '+' : '-'}${Math.abs(currentSize)} bytes  | ${previousSize >= 0 ? '-' : '+'}${Math.abs(previousSize)} bytes  | <span style="color: ${sizeChangeColor};">${sizeChange >= 0 ? '+' : ''}${sizeChange}%</span>  |
              | Coverage Change   | ${coverageChange >= 0 ? '+' : '-'}${Math.abs(coverageChange)}%  | ${previousCoverage >= 0 ? '-' : '+'}${Math.abs(previousCoverage)}%  | <span style="color: ${coverageChangeColor};">${coverageChange >= 0 ? '+' : ''}${coverageChange}%</span>  |
            `;

            const message = `### Pull Request Metrics Comparison\n\n${table}`;

            github.issues.createComment({
              issue_number: prNumber,
              owner: context.repository.owner.login,
              repo: context.repository.name,
              body: message
            });